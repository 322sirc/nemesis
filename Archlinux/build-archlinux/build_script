#!/bin/bash

set -euo pipefail

DEST_DIR="/mnt/storage/ISO/build-archlinux"
CUSTOM_DATA_SRC="/mnt/storage/Git/nemesis/MyScripts"
BUILD_DIR="$(pwd)/customiso"

# Ensure required tools
if ! pacman -Qq archiso &>/dev/null; then
    echo "Installing archiso..."
    sudo pacman -S --needed archiso
fi

# Clean previous build dir
echo "Preparing build directory..."
rm -rf "$BUILD_DIR"
mkdir -p "$BUILD_DIR"
cp -r /usr/share/archiso/configs/releng/* "$BUILD_DIR"

cd "$BUILD_DIR"

# Inject custom scripts into the ISO
echo "Injecting custom scripts into ISO..."
mkdir -p airootfs/root/Data
cp -r "$CUSTOM_DATA_SRC"/* airootfs/root/Data/
sudo chown -R root:root airootfs/root/Data
sudo chmod -R 777 airootfs/root/Data

# Inject cow_spacesize=10G into EFI boot entry
echo "Modifying EFI boot entry to add cow_spacesize=10G..."
EFI_ENTRY=$(find efiboot/loader/entries -type f -name "*archiso*x86_64*.conf" | head -n1)
if [[ -f "$EFI_ENTRY" ]]; then
    sed -i 's|options |options cow_spacesize=10G |' "$EFI_ENTRY"
    echo "→ Modified: $EFI_ENTRY"
else
    echo "⚠️ EFI boot entry not found!"
fi

# Optional: enable autostart
# echo "/root/Data/startup.sh" >> airootfs/root/.bashrc

# Build the ISO
echo "Building ISO..."
sudo mkarchiso -v ./

# Wait for ISO to appear
echo "Waiting for ISO to appear..."
while [[ -z $(find out/ -maxdepth 1 -name "archlinux-*-x86_64.iso") ]]; do
    sleep 2
done

ISO_FILE=$(find out/ -maxdepth 1 -name "archlinux-*-x86_64.iso" | head -n1)

# Copy ISO to final destination
echo "Copying ISO to $DEST_DIR..."
mkdir -p "$DEST_DIR"
cp "$ISO_FILE" "$DEST_DIR/"

# Clean up
echo "Cleaning up temporary build directory..."
cd ..
sudo rm -rf "$BUILD_DIR"

echo "✅ Build complete. ISO copied to: $DEST_DIR"
